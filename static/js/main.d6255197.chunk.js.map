{"version":3,"sources":["components/App.js","config/initStyle.js","index.js"],"names":["initStyleString","JSON","stringify","version","sources","test-source","type","data","features","properties","geometry","coordinates","layers","id","source","paint","circle-radius","App","_useState","useState","_useState2","Object","slicedToArray","style","setStyle","editorRef","createRef","react_default","a","createElement","display","width","height","react_map_gl_esm","mapStyle","parse","accessToken","latitude","longitude","zoom","onViewportChange","ref","defaultValue","onClick","value","current","replace","result","validate","length","forEach","_ref","message","console","error","ReactDOM","render","components_App","document","getElementById"],"mappings":"sLAMMA,SAAkBC,KAAKC,UCNd,CACbC,QAAS,EACTC,QAAS,CACPC,cAAe,CACbC,KAAM,UACNC,KAAM,CACJD,KAAM,oBACNE,SAAU,CACR,CACEF,KAAM,UACNG,WAAY,GACZC,SAAU,CACRJ,KAAM,QACNK,YAAa,CACX,EACA,SAQdC,OAAQ,CACN,CACEC,GAAI,aACJC,OAAQ,cACRR,KAAM,SACNS,MAAO,CACLC,gBAAiB,ODvByB,KAAM,IAkDzCC,MAhDf,WAAe,IAAAC,EACaC,mBAASnB,GADtBoB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAEPK,EAAYC,sBAgBlB,OACEC,EAAAC,EAAAC,cAAA,OAAKN,MAAO,CACVO,QAAS,OACTC,MAAO,QACPC,OAAQ,UAERL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEV,MAAO,CACLQ,MAAO,MACPC,OAAQ,SAEVE,SAAUjC,KAAKkC,MAAMZ,GACrBa,YAAY,6FACZC,SAAU,EACVC,UAAW,EACXC,KAAM,EACNC,iBAAkB,iBAAO,MAE3Bb,EAAAC,EAAAC,cAAA,YACEY,IAAKhB,EACLF,MAAO,CAAEQ,MAAO,OAChBW,aAAcnB,IAEhBI,EAAAC,EAAAC,cAAA,UAAQc,QArCY,WAAM,IACtBC,EAAUnB,EAAUoB,QAApBD,MACNA,EAAQA,EAAME,QAAQ,KAAM,KAE5B,IAAMC,EAASC,mBAASJ,GAEF,IAAlBG,EAAOE,QACTzB,EAASoB,GACTnB,EAAUoB,QAAQD,MAAQ3C,KAAKC,UAAUD,KAAKkC,MAAMS,GAAQ,KAAM,IAElEG,EAAOG,QAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAAiBC,QAAQC,MAAMF,OA2B9C,WE5CNG,IAASC,OAAO7B,EAAAC,EAAAC,cAAC4B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d6255197.chunk.js","sourcesContent":["import React, { useState, createRef } from 'react';\nimport MapGL from '@urbica/react-map-gl';\nimport { validate } from '@mapbox/mapbox-gl-style-spec';\nimport initStyle from '../config/initStyle';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst initStyleString = JSON.stringify(initStyle, null, 1);\n\nfunction App() {\n  const [style, setStyle] = useState(initStyleString);\n  const editorRef = createRef();\n\n  const setStyleHandler = () => {\n    let { value } = editorRef.current;\n    value = value.replace(/'/g, '\"');\n\n    const result = validate(value);\n\n    if (result.length === 0) {\n      setStyle(value);\n      editorRef.current.value = JSON.stringify(JSON.parse(value), null, 1);\n    } else {\n      result.forEach(({ message }) => console.error(message));\n    }\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      width: '100vw',\n      height: '100vh'\n    }}>\n      <MapGL\n        style={{\n          width: '50%',\n          height: '100vh'\n        }}\n        mapStyle={JSON.parse(style)}\n        accessToken='pk.eyJ1IjoiZGV2aWNlMjUiLCJhIjoiY2lzaGN3d2tiMDAxOTJ6bGYydDZrcHptdiJ9.UK55aUzBquqYns1AdnuTQg'\n        latitude={0}\n        longitude={0}\n        zoom={0}\n        onViewportChange={() => ({})}\n      />\n      <textarea\n        ref={editorRef}\n        style={{ width: '50%' }}\n        defaultValue={style}\n      />\n      <button onClick={setStyleHandler}>\n        apply\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","export default {\n  version: 8,\n  sources: {\n    'test-source': {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: [\n          {\n            type: 'Feature',\n            properties: {},\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                0,\n                0\n              ]\n            }\n          }\n        ]\n      }\n    }\n  },\n  layers: [\n    {\n      id: 'test-layer',\n      source: 'test-source',\n      type: 'circle',\n      paint: {\n        'circle-radius': 10\n      }\n    }\n  ]\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}